name: Continuous Monitoring

on:
  schedule:
    # Check every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Check Deployment Health
      id: health_check
      run: |
        DEPLOYMENT_URL="https://study-tk561s-projects.vercel.app"
        
        # Test main page
        MAIN_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $DEPLOYMENT_URL)
        echo "main_status=$MAIN_RESPONSE" >> $GITHUB_OUTPUT
        
        # Test API endpoint
        API_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $DEPLOYMENT_URL/api/status)
        echo "api_status=$API_RESPONSE" >> $GITHUB_OUTPUT
        
        # Check response time
        RESPONSE_TIME=$(curl -s -o /dev/null -w "%{time_total}" $DEPLOYMENT_URL)
        echo "response_time=$RESPONSE_TIME" >> $GITHUB_OUTPUT
        
        echo "Main: HTTP $MAIN_RESPONSE, API: HTTP $API_RESPONSE, Time: ${RESPONSE_TIME}s"
        
        # Fail if either endpoint returns non-200
        if [ "$MAIN_RESPONSE" != "200" ] || [ "$API_RESPONSE" != "200" ]; then
          echo "Health check failed"
          exit 1
        fi
        
    - name: Create Alert Issue on Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const title = `ðŸš¨ Deployment Health Check Failed - ${new Date().toISOString()}`;
          const body = `
          ## Health Check Alert
          
          **Timestamp**: ${new Date().toISOString()}
          **Main Page Status**: ${{ steps.health_check.outputs.main_status || 'Failed' }}
          **API Status**: ${{ steps.health_check.outputs.api_status || 'Failed' }}
          **Response Time**: ${{ steps.health_check.outputs.response_time || 'N/A' }}s
          
          ### Investigation Required
          - Check Vercel deployment logs
          - Verify function configurations
          - Monitor for any ongoing issues
          
          **Auto-fix will be triggered automatically.**
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['alert', 'health-check-failure', 'auto-fix-requested']
          });
          
    - name: Trigger Auto-Fix on Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'claude-autofix.yml',
            ref: 'main',
            inputs: {
              deployment_url: 'https://study-tk561s-projects.vercel.app',
              error_type: 'runtime_error'
            }
          });
          
    - name: Log Successful Check
      if: success()
      run: |
        echo "âœ… Health check passed at $(date)"
        echo "Main: ${{ steps.health_check.outputs.main_status }}"
        echo "API: ${{ steps.health_check.outputs.api_status }}"
        echo "Response time: ${{ steps.health_check.outputs.response_time }}s"